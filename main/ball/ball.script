local max_speed = 600

function init(self)
	
	-- Using this causes the ball to decelerate for some reason
	-- go.set("#ball", "linear_velocity", vmath.vector3(0, -500, 0))
end

function update(self, dt)
	local windowLength, windowHeight = window.get_size()
	-- msg.post("#ball", "apply_force", {force = vmath.vector3(0, -200, 0), position = go.get_world_position()})
	local p = go.get_position()
	local velocity = go.get("#ball", "linear_velocity")

	if velocity.x == 0 and velocity.y == 0 then
		-- https://forum.defold.com/t/apply-force-not-working-has-expected/74673
		msg.post("#ball", "apply_force", {force = (vmath.vector3(0, -500, 0) / (dt * 1)), position = go.get_world_position()})
	end

	print(velocity)

	if p.y < 0 then
		print("FAILURE")
		go.set_position(vmath.vector3(windowLength / 2, windowHeight / 2, 0))
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
	-- if message_id == hash("collision_response") then
	-- 	-- take action
	-- 	print("I collided with", message.other_id)
	-- end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
