local max_speed = 600
local min_x = 60
local max_x = 600

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed

	windowLength, windowHeight = window.get_size()
	go.set_position(vmath.vector3(windowLength / 2, windowHeight / 8, 0))
	
	msg.post(".", "acquire_input_focus")
	self.speed = 0
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	local p = go.get_position()
	local velocity = go.get("#bouncer", "linear_velocity")

	-- reset bouncer if it is below y == 0
	if p.y < 0 then
		print("FAILURE")
		windowLength, windowHeight = window.get_size()
		go.set_position(vmath.vector3(windowLength / 2, windowHeight / 8, 0))
		go.set_rotation(vmath.quat(0, 0, 0, 0))
		go.set("#bouncer", "linear_velocity", vmath.vector3(0, 0, 0))
	-- move bouncer based on input
	else
		p.x = p.x + self.speed * dt
		if p.x < min_x then
			p.x = min_x
		elseif p.x > max_x then
			p.x = max_x
		end
		go.set_position(p)
		self.speed = 0
	end
	
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
-- 	if action_id == hash("left") then
-- 		-- msg.post("#bouncer", "apply_force", {force = vmath.vector3(1, 0, 0), position = go.get_world_position()})
-- 		local pos = go.get_position()
-- 		pos.x = pos.x - 100
-- 		go.set_position(pos)
-- 	end
-- 
-- 	if action_id == hash("right") then
-- 		-- msg.post("#bouncer", "apply_force", {force = vmath.vector3(0, 0, 1), position = go.get_world_position()})
-- 		local pos = go.get_position()
-- 		pos.x = pos.x + 100
-- 		go.set_position(pos)
-- 	end
	if action_id == hash("right") then
		self.speed = max_speed
	elseif action_id == hash("left") then
		self.speed = -max_speed
	end
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
